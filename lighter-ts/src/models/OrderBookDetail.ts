/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OrderBookDetail
 */
export interface OrderBookDetail {
    /**
     * 
     * @type {string}
     * @memberof OrderBookDetail
     */
    symbol: string;
    /**
     * 
     * @type {number}
     * @memberof OrderBookDetail
     */
    marketId: number;
    /**
     * 
     * @type {string}
     * @memberof OrderBookDetail
     */
    status: OrderBookDetailStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof OrderBookDetail
     */
    takerFee: string;
    /**
     * 
     * @type {string}
     * @memberof OrderBookDetail
     */
    makerFee: string;
    /**
     * 
     * @type {string}
     * @memberof OrderBookDetail
     */
    liquidationFee: string;
    /**
     * 
     * @type {string}
     * @memberof OrderBookDetail
     */
    minBaseAmount: string;
    /**
     * 
     * @type {string}
     * @memberof OrderBookDetail
     */
    minQuoteAmount: string;
    /**
     * 
     * @type {number}
     * @memberof OrderBookDetail
     */
    supportedSizeDecimals: number;
    /**
     * 
     * @type {number}
     * @memberof OrderBookDetail
     */
    supportedPriceDecimals: number;
    /**
     * 
     * @type {number}
     * @memberof OrderBookDetail
     */
    supportedQuoteDecimals: number;
    /**
     * 
     * @type {number}
     * @memberof OrderBookDetail
     */
    sizeDecimals: number;
    /**
     * 
     * @type {number}
     * @memberof OrderBookDetail
     */
    priceDecimals: number;
    /**
     * 
     * @type {number}
     * @memberof OrderBookDetail
     */
    quoteMultiplier: number;
    /**
     * 
     * @type {number}
     * @memberof OrderBookDetail
     */
    defaultInitialMarginFraction: number;
    /**
     * 
     * @type {number}
     * @memberof OrderBookDetail
     */
    minInitialMarginFraction: number;
    /**
     * 
     * @type {number}
     * @memberof OrderBookDetail
     */
    maintenanceMarginFraction: number;
    /**
     * 
     * @type {number}
     * @memberof OrderBookDetail
     */
    closeoutMarginFraction: number;
    /**
     * 
     * @type {number}
     * @memberof OrderBookDetail
     */
    lastTradePrice: number;
    /**
     * 
     * @type {number}
     * @memberof OrderBookDetail
     */
    dailyTradesCount: number;
    /**
     * 
     * @type {number}
     * @memberof OrderBookDetail
     */
    dailyBaseTokenVolume: number;
    /**
     * 
     * @type {number}
     * @memberof OrderBookDetail
     */
    dailyQuoteTokenVolume: number;
    /**
     * 
     * @type {number}
     * @memberof OrderBookDetail
     */
    dailyPriceLow: number;
    /**
     * 
     * @type {number}
     * @memberof OrderBookDetail
     */
    dailyPriceHigh: number;
    /**
     * 
     * @type {number}
     * @memberof OrderBookDetail
     */
    dailyPriceChange: number;
    /**
     * 
     * @type {number}
     * @memberof OrderBookDetail
     */
    openInterest: number;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof OrderBookDetail
     */
    dailyChart: { [key: string]: number; };
}


/**
 * @export
 */
export const OrderBookDetailStatusEnum = {
    frozen: 'frozen',
    active: 'active'
} as const;
export type OrderBookDetailStatusEnum = typeof OrderBookDetailStatusEnum[keyof typeof OrderBookDetailStatusEnum];


/**
 * Check if a given object implements the OrderBookDetail interface.
 */
export function instanceOfOrderBookDetail(value: object): value is OrderBookDetail {
    if (!('symbol' in value) || value['symbol'] === undefined) return false;
    if (!('marketId' in value) || value['marketId'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('takerFee' in value) || value['takerFee'] === undefined) return false;
    if (!('makerFee' in value) || value['makerFee'] === undefined) return false;
    if (!('liquidationFee' in value) || value['liquidationFee'] === undefined) return false;
    if (!('minBaseAmount' in value) || value['minBaseAmount'] === undefined) return false;
    if (!('minQuoteAmount' in value) || value['minQuoteAmount'] === undefined) return false;
    if (!('supportedSizeDecimals' in value) || value['supportedSizeDecimals'] === undefined) return false;
    if (!('supportedPriceDecimals' in value) || value['supportedPriceDecimals'] === undefined) return false;
    if (!('supportedQuoteDecimals' in value) || value['supportedQuoteDecimals'] === undefined) return false;
    if (!('sizeDecimals' in value) || value['sizeDecimals'] === undefined) return false;
    if (!('priceDecimals' in value) || value['priceDecimals'] === undefined) return false;
    if (!('quoteMultiplier' in value) || value['quoteMultiplier'] === undefined) return false;
    if (!('defaultInitialMarginFraction' in value) || value['defaultInitialMarginFraction'] === undefined) return false;
    if (!('minInitialMarginFraction' in value) || value['minInitialMarginFraction'] === undefined) return false;
    if (!('maintenanceMarginFraction' in value) || value['maintenanceMarginFraction'] === undefined) return false;
    if (!('closeoutMarginFraction' in value) || value['closeoutMarginFraction'] === undefined) return false;
    if (!('lastTradePrice' in value) || value['lastTradePrice'] === undefined) return false;
    if (!('dailyTradesCount' in value) || value['dailyTradesCount'] === undefined) return false;
    if (!('dailyBaseTokenVolume' in value) || value['dailyBaseTokenVolume'] === undefined) return false;
    if (!('dailyQuoteTokenVolume' in value) || value['dailyQuoteTokenVolume'] === undefined) return false;
    if (!('dailyPriceLow' in value) || value['dailyPriceLow'] === undefined) return false;
    if (!('dailyPriceHigh' in value) || value['dailyPriceHigh'] === undefined) return false;
    if (!('dailyPriceChange' in value) || value['dailyPriceChange'] === undefined) return false;
    if (!('openInterest' in value) || value['openInterest'] === undefined) return false;
    if (!('dailyChart' in value) || value['dailyChart'] === undefined) return false;
    return true;
}

export function OrderBookDetailFromJSON(json: any): OrderBookDetail {
    return OrderBookDetailFromJSONTyped(json, false);
}

export function OrderBookDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderBookDetail {
    if (json == null) {
        return json;
    }
    return {
        
        'symbol': json['symbol'],
        'marketId': json['market_id'],
        'status': json['status'],
        'takerFee': json['taker_fee'],
        'makerFee': json['maker_fee'],
        'liquidationFee': json['liquidation_fee'],
        'minBaseAmount': json['min_base_amount'],
        'minQuoteAmount': json['min_quote_amount'],
        'supportedSizeDecimals': json['supported_size_decimals'],
        'supportedPriceDecimals': json['supported_price_decimals'],
        'supportedQuoteDecimals': json['supported_quote_decimals'],
        'sizeDecimals': json['size_decimals'],
        'priceDecimals': json['price_decimals'],
        'quoteMultiplier': json['quote_multiplier'],
        'defaultInitialMarginFraction': json['default_initial_margin_fraction'],
        'minInitialMarginFraction': json['min_initial_margin_fraction'],
        'maintenanceMarginFraction': json['maintenance_margin_fraction'],
        'closeoutMarginFraction': json['closeout_margin_fraction'],
        'lastTradePrice': json['last_trade_price'],
        'dailyTradesCount': json['daily_trades_count'],
        'dailyBaseTokenVolume': json['daily_base_token_volume'],
        'dailyQuoteTokenVolume': json['daily_quote_token_volume'],
        'dailyPriceLow': json['daily_price_low'],
        'dailyPriceHigh': json['daily_price_high'],
        'dailyPriceChange': json['daily_price_change'],
        'openInterest': json['open_interest'],
        'dailyChart': json['daily_chart'],
    };
}

export function OrderBookDetailToJSON(json: any): OrderBookDetail {
    return OrderBookDetailToJSONTyped(json, false);
}

export function OrderBookDetailToJSONTyped(value?: OrderBookDetail | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'symbol': value['symbol'],
        'market_id': value['marketId'],
        'status': value['status'],
        'taker_fee': value['takerFee'],
        'maker_fee': value['makerFee'],
        'liquidation_fee': value['liquidationFee'],
        'min_base_amount': value['minBaseAmount'],
        'min_quote_amount': value['minQuoteAmount'],
        'supported_size_decimals': value['supportedSizeDecimals'],
        'supported_price_decimals': value['supportedPriceDecimals'],
        'supported_quote_decimals': value['supportedQuoteDecimals'],
        'size_decimals': value['sizeDecimals'],
        'price_decimals': value['priceDecimals'],
        'quote_multiplier': value['quoteMultiplier'],
        'default_initial_margin_fraction': value['defaultInitialMarginFraction'],
        'min_initial_margin_fraction': value['minInitialMarginFraction'],
        'maintenance_margin_fraction': value['maintenanceMarginFraction'],
        'closeout_margin_fraction': value['closeoutMarginFraction'],
        'last_trade_price': value['lastTradePrice'],
        'daily_trades_count': value['dailyTradesCount'],
        'daily_base_token_volume': value['dailyBaseTokenVolume'],
        'daily_quote_token_volume': value['dailyQuoteTokenVolume'],
        'daily_price_low': value['dailyPriceLow'],
        'daily_price_high': value['dailyPriceHigh'],
        'daily_price_change': value['dailyPriceChange'],
        'open_interest': value['openInterest'],
        'daily_chart': value['dailyChart'],
    };
}

