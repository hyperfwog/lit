/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Block } from './Block';
import {
    BlockFromJSON,
    BlockFromJSONTyped,
    BlockToJSON,
    BlockToJSONTyped,
} from './Block';

/**
 * 
 * @export
 * @interface Blocks
 */
export interface Blocks {
    /**
     * 
     * @type {number}
     * @memberof Blocks
     */
    code: number;
    /**
     * 
     * @type {string}
     * @memberof Blocks
     */
    message?: string;
    /**
     * 
     * @type {number}
     * @memberof Blocks
     */
    total: number;
    /**
     * 
     * @type {Array<Block>}
     * @memberof Blocks
     */
    blocks: Array<Block>;
}

/**
 * Check if a given object implements the Blocks interface.
 */
export function instanceOfBlocks(value: object): value is Blocks {
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    if (!('blocks' in value) || value['blocks'] === undefined) return false;
    return true;
}

export function BlocksFromJSON(json: any): Blocks {
    return BlocksFromJSONTyped(json, false);
}

export function BlocksFromJSONTyped(json: any, ignoreDiscriminator: boolean): Blocks {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'],
        'message': json['message'] == null ? undefined : json['message'],
        'total': json['total'],
        'blocks': ((json['blocks'] as Array<any>).map(BlockFromJSON)),
    };
}

export function BlocksToJSON(json: any): Blocks {
    return BlocksToJSONTyped(json, false);
}

export function BlocksToJSONTyped(value?: Blocks | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'code': value['code'],
        'message': value['message'],
        'total': value['total'],
        'blocks': ((value['blocks'] as Array<any>).map(BlockToJSON)),
    };
}

