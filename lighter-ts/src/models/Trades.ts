/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Trade } from './Trade';
import {
    TradeFromJSON,
    TradeFromJSONTyped,
    TradeToJSON,
    TradeToJSONTyped,
} from './Trade';

/**
 * 
 * @export
 * @interface Trades
 */
export interface Trades {
    /**
     * 
     * @type {number}
     * @memberof Trades
     */
    code: number;
    /**
     * 
     * @type {string}
     * @memberof Trades
     */
    message?: string;
    /**
     * 
     * @type {string}
     * @memberof Trades
     */
    nextCursor?: string;
    /**
     * 
     * @type {Array<Trade>}
     * @memberof Trades
     */
    trades: Array<Trade>;
}

/**
 * Check if a given object implements the Trades interface.
 */
export function instanceOfTrades(value: object): value is Trades {
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('trades' in value) || value['trades'] === undefined) return false;
    return true;
}

export function TradesFromJSON(json: any): Trades {
    return TradesFromJSONTyped(json, false);
}

export function TradesFromJSONTyped(json: any, ignoreDiscriminator: boolean): Trades {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'],
        'message': json['message'] == null ? undefined : json['message'],
        'nextCursor': json['next_cursor'] == null ? undefined : json['next_cursor'],
        'trades': ((json['trades'] as Array<any>).map(TradeFromJSON)),
    };
}

export function TradesToJSON(json: any): Trades {
    return TradesToJSONTyped(json, false);
}

export function TradesToJSONTyped(value?: Trades | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'code': value['code'],
        'message': value['message'],
        'next_cursor': value['nextCursor'],
        'trades': ((value['trades'] as Array<any>).map(TradeToJSON)),
    };
}

