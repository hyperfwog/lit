/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Tx
 */
export interface Tx {
    /**
     * 
     * @type {string}
     * @memberof Tx
     */
    hash: string;
    /**
     * 
     * @type {number}
     * @memberof Tx
     */
    type: number;
    /**
     * 
     * @type {string}
     * @memberof Tx
     */
    info: string;
    /**
     * 
     * @type {string}
     * @memberof Tx
     */
    eventInfo: string;
    /**
     * 
     * @type {number}
     * @memberof Tx
     */
    status: number;
    /**
     * 
     * @type {number}
     * @memberof Tx
     */
    transactionIndex: number;
    /**
     * 
     * @type {string}
     * @memberof Tx
     */
    l1Address: string;
    /**
     * 
     * @type {number}
     * @memberof Tx
     */
    accountIndex: number;
    /**
     * 
     * @type {number}
     * @memberof Tx
     */
    nonce: number;
    /**
     * 
     * @type {number}
     * @memberof Tx
     */
    expireAt: number;
    /**
     * 
     * @type {number}
     * @memberof Tx
     */
    blockHeight: number;
    /**
     * 
     * @type {number}
     * @memberof Tx
     */
    queuedAt: number;
    /**
     * 
     * @type {number}
     * @memberof Tx
     */
    executedAt: number;
    /**
     * 
     * @type {number}
     * @memberof Tx
     */
    sequenceIndex: number;
    /**
     * 
     * @type {string}
     * @memberof Tx
     */
    parentHash: string;
}

/**
 * Check if a given object implements the Tx interface.
 */
export function instanceOfTx(value: object): value is Tx {
    if (!('hash' in value) || value['hash'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('info' in value) || value['info'] === undefined) return false;
    if (!('eventInfo' in value) || value['eventInfo'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('transactionIndex' in value) || value['transactionIndex'] === undefined) return false;
    if (!('l1Address' in value) || value['l1Address'] === undefined) return false;
    if (!('accountIndex' in value) || value['accountIndex'] === undefined) return false;
    if (!('nonce' in value) || value['nonce'] === undefined) return false;
    if (!('expireAt' in value) || value['expireAt'] === undefined) return false;
    if (!('blockHeight' in value) || value['blockHeight'] === undefined) return false;
    if (!('queuedAt' in value) || value['queuedAt'] === undefined) return false;
    if (!('executedAt' in value) || value['executedAt'] === undefined) return false;
    if (!('sequenceIndex' in value) || value['sequenceIndex'] === undefined) return false;
    if (!('parentHash' in value) || value['parentHash'] === undefined) return false;
    return true;
}

export function TxFromJSON(json: any): Tx {
    return TxFromJSONTyped(json, false);
}

export function TxFromJSONTyped(json: any, ignoreDiscriminator: boolean): Tx {
    if (json == null) {
        return json;
    }
    return {
        
        'hash': json['hash'],
        'type': json['type'],
        'info': json['info'],
        'eventInfo': json['event_info'],
        'status': json['status'],
        'transactionIndex': json['transaction_index'],
        'l1Address': json['l1_address'],
        'accountIndex': json['account_index'],
        'nonce': json['nonce'],
        'expireAt': json['expire_at'],
        'blockHeight': json['block_height'],
        'queuedAt': json['queued_at'],
        'executedAt': json['executed_at'],
        'sequenceIndex': json['sequence_index'],
        'parentHash': json['parent_hash'],
    };
}

export function TxToJSON(json: any): Tx {
    return TxToJSONTyped(json, false);
}

export function TxToJSONTyped(value?: Tx | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'hash': value['hash'],
        'type': value['type'],
        'info': value['info'],
        'event_info': value['eventInfo'],
        'status': value['status'],
        'transaction_index': value['transactionIndex'],
        'l1_address': value['l1Address'],
        'account_index': value['accountIndex'],
        'nonce': value['nonce'],
        'expire_at': value['expireAt'],
        'block_height': value['blockHeight'],
        'queued_at': value['queuedAt'],
        'executed_at': value['executedAt'],
        'sequence_index': value['sequenceIndex'],
        'parent_hash': value['parentHash'],
    };
}

