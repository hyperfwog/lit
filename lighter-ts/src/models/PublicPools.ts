/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PublicPool } from './PublicPool';
import {
    PublicPoolFromJSON,
    PublicPoolFromJSONTyped,
    PublicPoolToJSON,
    PublicPoolToJSONTyped,
} from './PublicPool';

/**
 * 
 * @export
 * @interface PublicPools
 */
export interface PublicPools {
    /**
     * 
     * @type {number}
     * @memberof PublicPools
     */
    code: number;
    /**
     * 
     * @type {string}
     * @memberof PublicPools
     */
    message?: string;
    /**
     * 
     * @type {number}
     * @memberof PublicPools
     */
    total: number;
    /**
     * 
     * @type {Array<PublicPool>}
     * @memberof PublicPools
     */
    publicPools: Array<PublicPool>;
}

/**
 * Check if a given object implements the PublicPools interface.
 */
export function instanceOfPublicPools(value: object): value is PublicPools {
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    if (!('publicPools' in value) || value['publicPools'] === undefined) return false;
    return true;
}

export function PublicPoolsFromJSON(json: any): PublicPools {
    return PublicPoolsFromJSONTyped(json, false);
}

export function PublicPoolsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicPools {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'],
        'message': json['message'] == null ? undefined : json['message'],
        'total': json['total'],
        'publicPools': ((json['public_pools'] as Array<any>).map(PublicPoolFromJSON)),
    };
}

export function PublicPoolsToJSON(json: any): PublicPools {
    return PublicPoolsToJSONTyped(json, false);
}

export function PublicPoolsToJSONTyped(value?: PublicPools | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'code': value['code'],
        'message': value['message'],
        'total': value['total'],
        'public_pools': ((value['publicPools'] as Array<any>).map(PublicPoolToJSON)),
    };
}

