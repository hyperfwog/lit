/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MarketInfo
 */
export interface MarketInfo {
    /**
     * 
     * @type {number}
     * @memberof MarketInfo
     */
    marketId: number;
    /**
     * 
     * @type {string}
     * @memberof MarketInfo
     */
    indexPrice: string;
    /**
     * 
     * @type {string}
     * @memberof MarketInfo
     */
    markPrice: string;
    /**
     * 
     * @type {string}
     * @memberof MarketInfo
     */
    openInterest: string;
    /**
     * 
     * @type {string}
     * @memberof MarketInfo
     */
    lastTradePrice: string;
    /**
     * 
     * @type {string}
     * @memberof MarketInfo
     */
    currentFundingRate: string;
    /**
     * 
     * @type {string}
     * @memberof MarketInfo
     */
    fundingRate: string;
    /**
     * 
     * @type {number}
     * @memberof MarketInfo
     */
    fundingTimestamp: number;
    /**
     * 
     * @type {number}
     * @memberof MarketInfo
     */
    dailyBaseTokenVolume: number;
    /**
     * 
     * @type {number}
     * @memberof MarketInfo
     */
    dailyQuoteTokenVolume: number;
    /**
     * 
     * @type {number}
     * @memberof MarketInfo
     */
    dailyPriceLow: number;
    /**
     * 
     * @type {number}
     * @memberof MarketInfo
     */
    dailyPriceHigh: number;
    /**
     * 
     * @type {number}
     * @memberof MarketInfo
     */
    dailyPriceChange: number;
}

/**
 * Check if a given object implements the MarketInfo interface.
 */
export function instanceOfMarketInfo(value: object): value is MarketInfo {
    if (!('marketId' in value) || value['marketId'] === undefined) return false;
    if (!('indexPrice' in value) || value['indexPrice'] === undefined) return false;
    if (!('markPrice' in value) || value['markPrice'] === undefined) return false;
    if (!('openInterest' in value) || value['openInterest'] === undefined) return false;
    if (!('lastTradePrice' in value) || value['lastTradePrice'] === undefined) return false;
    if (!('currentFundingRate' in value) || value['currentFundingRate'] === undefined) return false;
    if (!('fundingRate' in value) || value['fundingRate'] === undefined) return false;
    if (!('fundingTimestamp' in value) || value['fundingTimestamp'] === undefined) return false;
    if (!('dailyBaseTokenVolume' in value) || value['dailyBaseTokenVolume'] === undefined) return false;
    if (!('dailyQuoteTokenVolume' in value) || value['dailyQuoteTokenVolume'] === undefined) return false;
    if (!('dailyPriceLow' in value) || value['dailyPriceLow'] === undefined) return false;
    if (!('dailyPriceHigh' in value) || value['dailyPriceHigh'] === undefined) return false;
    if (!('dailyPriceChange' in value) || value['dailyPriceChange'] === undefined) return false;
    return true;
}

export function MarketInfoFromJSON(json: any): MarketInfo {
    return MarketInfoFromJSONTyped(json, false);
}

export function MarketInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MarketInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'marketId': json['market_id'],
        'indexPrice': json['index_price'],
        'markPrice': json['mark_price'],
        'openInterest': json['open_interest'],
        'lastTradePrice': json['last_trade_price'],
        'currentFundingRate': json['current_funding_rate'],
        'fundingRate': json['funding_rate'],
        'fundingTimestamp': json['funding_timestamp'],
        'dailyBaseTokenVolume': json['daily_base_token_volume'],
        'dailyQuoteTokenVolume': json['daily_quote_token_volume'],
        'dailyPriceLow': json['daily_price_low'],
        'dailyPriceHigh': json['daily_price_high'],
        'dailyPriceChange': json['daily_price_change'],
    };
}

export function MarketInfoToJSON(json: any): MarketInfo {
    return MarketInfoToJSONTyped(json, false);
}

export function MarketInfoToJSONTyped(value?: MarketInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'market_id': value['marketId'],
        'index_price': value['indexPrice'],
        'mark_price': value['markPrice'],
        'open_interest': value['openInterest'],
        'last_trade_price': value['lastTradePrice'],
        'current_funding_rate': value['currentFundingRate'],
        'funding_rate': value['fundingRate'],
        'funding_timestamp': value['fundingTimestamp'],
        'daily_base_token_volume': value['dailyBaseTokenVolume'],
        'daily_quote_token_volume': value['dailyQuoteTokenVolume'],
        'daily_price_low': value['dailyPriceLow'],
        'daily_price_high': value['dailyPriceHigh'],
        'daily_price_change': value['dailyPriceChange'],
    };
}

