/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface L1ProviderInfo
 */
export interface L1ProviderInfo {
    /**
     * 
     * @type {number}
     * @memberof L1ProviderInfo
     */
    chainId: number;
    /**
     * 
     * @type {number}
     * @memberof L1ProviderInfo
     */
    networkId: number;
    /**
     * 
     * @type {number}
     * @memberof L1ProviderInfo
     */
    latestBlockNumber: number;
    /**
     * 
     * @type {string}
     * @memberof L1ProviderInfo
     */
    networkRpc: string;
}

/**
 * Check if a given object implements the L1ProviderInfo interface.
 */
export function instanceOfL1ProviderInfo(value: object): value is L1ProviderInfo {
    if (!('chainId' in value) || value['chainId'] === undefined) return false;
    if (!('networkId' in value) || value['networkId'] === undefined) return false;
    if (!('latestBlockNumber' in value) || value['latestBlockNumber'] === undefined) return false;
    if (!('networkRpc' in value) || value['networkRpc'] === undefined) return false;
    return true;
}

export function L1ProviderInfoFromJSON(json: any): L1ProviderInfo {
    return L1ProviderInfoFromJSONTyped(json, false);
}

export function L1ProviderInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): L1ProviderInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'chainId': json['chainId'],
        'networkId': json['networkId'],
        'latestBlockNumber': json['latestBlockNumber'],
        'networkRpc': json['NetworkRpc'],
    };
}

export function L1ProviderInfoToJSON(json: any): L1ProviderInfo {
    return L1ProviderInfoToJSONTyped(json, false);
}

export function L1ProviderInfoToJSONTyped(value?: L1ProviderInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'chainId': value['chainId'],
        'networkId': value['networkId'],
        'latestBlockNumber': value['latestBlockNumber'],
        'NetworkRpc': value['networkRpc'],
    };
}

