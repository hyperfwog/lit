/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Funding } from './Funding';
import {
    FundingFromJSON,
    FundingFromJSONTyped,
    FundingToJSON,
    FundingToJSONTyped,
} from './Funding';

/**
 * 
 * @export
 * @interface Fundings
 */
export interface Fundings {
    /**
     * 
     * @type {number}
     * @memberof Fundings
     */
    code: number;
    /**
     * 
     * @type {string}
     * @memberof Fundings
     */
    message?: string;
    /**
     * 
     * @type {string}
     * @memberof Fundings
     */
    resolution: string;
    /**
     * 
     * @type {Array<Funding>}
     * @memberof Fundings
     */
    fundings: Array<Funding>;
}

/**
 * Check if a given object implements the Fundings interface.
 */
export function instanceOfFundings(value: object): value is Fundings {
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('resolution' in value) || value['resolution'] === undefined) return false;
    if (!('fundings' in value) || value['fundings'] === undefined) return false;
    return true;
}

export function FundingsFromJSON(json: any): Fundings {
    return FundingsFromJSONTyped(json, false);
}

export function FundingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Fundings {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'],
        'message': json['message'] == null ? undefined : json['message'],
        'resolution': json['resolution'],
        'fundings': ((json['fundings'] as Array<any>).map(FundingFromJSON)),
    };
}

export function FundingsToJSON(json: any): Fundings {
    return FundingsToJSONTyped(json, false);
}

export function FundingsToJSONTyped(value?: Fundings | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'code': value['code'],
        'message': value['message'],
        'resolution': value['resolution'],
        'fundings': ((value['fundings'] as Array<any>).map(FundingToJSON)),
    };
}

