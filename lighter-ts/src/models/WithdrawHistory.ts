/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WithdrawHistoryItem } from './WithdrawHistoryItem';
import {
    WithdrawHistoryItemFromJSON,
    WithdrawHistoryItemFromJSONTyped,
    WithdrawHistoryItemToJSON,
    WithdrawHistoryItemToJSONTyped,
} from './WithdrawHistoryItem';
import type { WithdrawHistoryCursor } from './WithdrawHistoryCursor';
import {
    WithdrawHistoryCursorFromJSON,
    WithdrawHistoryCursorFromJSONTyped,
    WithdrawHistoryCursorToJSON,
    WithdrawHistoryCursorToJSONTyped,
} from './WithdrawHistoryCursor';

/**
 * 
 * @export
 * @interface WithdrawHistory
 */
export interface WithdrawHistory {
    /**
     * 
     * @type {number}
     * @memberof WithdrawHistory
     */
    code: number;
    /**
     * 
     * @type {string}
     * @memberof WithdrawHistory
     */
    message?: string;
    /**
     * 
     * @type {Array<WithdrawHistoryItem>}
     * @memberof WithdrawHistory
     */
    withdraws: Array<WithdrawHistoryItem>;
    /**
     * 
     * @type {WithdrawHistoryCursor}
     * @memberof WithdrawHistory
     */
    cursor: WithdrawHistoryCursor;
}

/**
 * Check if a given object implements the WithdrawHistory interface.
 */
export function instanceOfWithdrawHistory(value: object): value is WithdrawHistory {
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('withdraws' in value) || value['withdraws'] === undefined) return false;
    if (!('cursor' in value) || value['cursor'] === undefined) return false;
    return true;
}

export function WithdrawHistoryFromJSON(json: any): WithdrawHistory {
    return WithdrawHistoryFromJSONTyped(json, false);
}

export function WithdrawHistoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): WithdrawHistory {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'],
        'message': json['message'] == null ? undefined : json['message'],
        'withdraws': ((json['withdraws'] as Array<any>).map(WithdrawHistoryItemFromJSON)),
        'cursor': WithdrawHistoryCursorFromJSON(json['cursor']),
    };
}

export function WithdrawHistoryToJSON(json: any): WithdrawHistory {
    return WithdrawHistoryToJSONTyped(json, false);
}

export function WithdrawHistoryToJSONTyped(value?: WithdrawHistory | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'code': value['code'],
        'message': value['message'],
        'withdraws': ((value['withdraws'] as Array<any>).map(WithdrawHistoryItemToJSON)),
        'cursor': WithdrawHistoryCursorToJSON(value['cursor']),
    };
}

