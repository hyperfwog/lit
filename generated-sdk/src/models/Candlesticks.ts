/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Candlestick } from './Candlestick';
import {
    CandlestickFromJSON,
    CandlestickFromJSONTyped,
    CandlestickToJSON,
    CandlestickToJSONTyped,
} from './Candlestick';

/**
 * 
 * @export
 * @interface Candlesticks
 */
export interface Candlesticks {
    /**
     * 
     * @type {number}
     * @memberof Candlesticks
     */
    code: number;
    /**
     * 
     * @type {string}
     * @memberof Candlesticks
     */
    message?: string;
    /**
     * 
     * @type {string}
     * @memberof Candlesticks
     */
    resolution: string;
    /**
     * 
     * @type {Array<Candlestick>}
     * @memberof Candlesticks
     */
    candlesticks: Array<Candlestick>;
}

/**
 * Check if a given object implements the Candlesticks interface.
 */
export function instanceOfCandlesticks(value: object): value is Candlesticks {
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('resolution' in value) || value['resolution'] === undefined) return false;
    if (!('candlesticks' in value) || value['candlesticks'] === undefined) return false;
    return true;
}

export function CandlesticksFromJSON(json: any): Candlesticks {
    return CandlesticksFromJSONTyped(json, false);
}

export function CandlesticksFromJSONTyped(json: any, ignoreDiscriminator: boolean): Candlesticks {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'],
        'message': json['message'] == null ? undefined : json['message'],
        'resolution': json['resolution'],
        'candlesticks': ((json['candlesticks'] as Array<any>).map(CandlestickFromJSON)),
    };
}

export function CandlesticksToJSON(json: any): Candlesticks {
    return CandlesticksToJSONTyped(json, false);
}

export function CandlesticksToJSONTyped(value?: Candlesticks | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'code': value['code'],
        'message': value['message'],
        'resolution': value['resolution'],
        'candlesticks': ((value['candlesticks'] as Array<any>).map(CandlestickToJSON)),
    };
}

