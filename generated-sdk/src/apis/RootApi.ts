/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ResultCode,
  Status,
  ZkLighterInfo,
} from '../models/index';
import {
    ResultCodeFromJSON,
    ResultCodeToJSON,
    StatusFromJSON,
    StatusToJSON,
    ZkLighterInfoFromJSON,
    ZkLighterInfoToJSON,
} from '../models/index';

/**
 * RootApi - interface
 * 
 * @export
 * @interface RootApiInterface
 */
export interface RootApiInterface {
    /**
     * Get info of zklighter
     * @summary info
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RootApiInterface
     */
    infoRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ZkLighterInfo>>;

    /**
     * Get info of zklighter
     * info
     */
    info(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ZkLighterInfo>;

    /**
     * Get status of zklighter
     * @summary status
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RootApiInterface
     */
    statusRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;

    /**
     * Get status of zklighter
     * status
     */
    status(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;

}

/**
 * 
 */
export class RootApi extends runtime.BaseAPI implements RootApiInterface {

    /**
     * Get info of zklighter
     * info
     */
    async infoRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ZkLighterInfo>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/info`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ZkLighterInfoFromJSON(jsonValue));
    }

    /**
     * Get info of zklighter
     * info
     */
    async info(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ZkLighterInfo> {
        const response = await this.infoRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get status of zklighter
     * status
     */
    async statusRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => StatusFromJSON(jsonValue));
    }

    /**
     * Get status of zklighter
     * status
     */
    async status(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status> {
        const response = await this.statusRaw(initOverrides);
        return await response.value();
    }

}
